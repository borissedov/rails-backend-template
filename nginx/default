# 1) replace /etc/nginx/sites-available/default file.
# 2.a) generate ssl cert and place it in /etc/nginx/ssl/ folder with private key
$ 2.b) reconfigure to use http with http port.

server {
    listen 80;
    server_name api.myapp.com;
    return 301 https://$server_name$request_uri;    
}

upstream app {
    # Path to Puma SOCK file, as defined previously
    server unix:/deploy/myapp/shared/tmp/sockets/puma.sock fail_timeout=0;
}

server {  
#    server_name api.myapp.com;
#    listen 80 default_server; 

    server_name api.myapp.com;
    listen 443 default_server ssl;  
    
    ssl_certificate /etc/nginx/ssl/myapp_bundled.crt;
    ssl_certificate_key /etc/nginx/ssl/myapp.key;

    # ~2 seconds is often enough for most folks to parse HTML/CSS and
    # retrieve needed images/icons/frames, connections are cheap in
    # nginx so increasing this is generally safe...
    keepalive_timeout 5;

    root /deploy/myapp/current/public;

    # this rewrites all the requests to the maintenance.html
    # page if it exists in the doc root. This is for capistrano's
    # disable web task
    if (-f $document_root/maintenance.html) {
      rewrite  ^(.*)$  /maintenance.html last;
      break;
    }
 
    try_files $uri/index.html $uri @app;
    location @app {   
      if ($request_method = 'OPTIONS') {
        # Tell client that this pre-flight info is valid for 20 days
        add_header 'Access-Control-Allow-Origin' 'http://localhost:3001' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,access-control-allow-origin' always;

        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      } 

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto https;
      proxy_redirect off;
      proxy_pass http://app;
    }

  # Error pages
  # error_page 500 502 503 504 /500.html;
  location = /500.html {
    root /deploy/myapp/current/public;
  }
}


